node-api
npm init --y
npm i -D typescript @types/node
npx tsc --init

express-api
npm init --y
npm i express cors pg dotenv helmet
npm i -D typescript nodemon ts-node @types/node @types/express @types/cors @types/pg @types/helmet
npx tsc --init

---

tsconfig.json template (replace all):

{
  "compilerOptions": {
    "target": "es2017", // Or a newer target like "es2020" for modern Node.js versions
    "module": "commonjs",
    "outDir": "./dist", // Output directory for compiled JavaScript files
    "rootDir": "./src", // Root directory of your TypeScript source files
    "strict": true,
    "esModuleInterop": true,
    "skipLibCheck": true,
    "forceConsistentCasingInFileNames": true
  },
  "include": ["src/**/*.ts"], // Include all .ts files in the src directory
  "exclude": ["node_modules", "**/*.spec.ts"] // Exclude node_modules and test files
}

---

./src/main.ts template:

import express, { Request, Response } from "express";
import cors from "cors";
import helmet from "helmet";

const app = express();
const PORT = process.env.PORT || 8080;

app.use(helmet());
app.use(cors());
app.use(express.json());

app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});

---

prisma

npm i prisma
npx prisma init